{"version":3,"sources":["components/Form.jsx","components/CardFront.jsx","components/Card.jsx","App.js","index.js"],"names":["Form","this","props","cardName","cardDescription","cardAttr1","cardAttr2","cardAttr3","cardImage","cardRare","isSaveButtonDisabled","onInputChange","onSaveButtonClick","action","className","type","name","id","value","onChange","src","alt","disabled","onClick","React","Component","defaultProps","cardTrunfo","hasTrunfo","CardFront","Card","state","flipped","class","initialState","App","filterChangeHandler","event","target","checked","setState","changeHandler","cardValidation","validateInputs","validateAttributes","attr1","Number","attr2","attr3","inputs","attributes","isAllValid","saveButton","preventDefault","card","prevState","cards","concat","removeCard","cardToRemove","isTrunfo","updatedCardList","filter","nameFilter","rarityFilter","superTrunfoFilter","filterDisabled","placeholder","selected","includes","map","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.20ff3827.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass Form extends React.Component {\n  render() {\n    const { cardName,\n      cardDescription,\n      cardAttr1,\n      cardAttr2,\n      cardAttr3,\n      cardImage,\n      cardRare,\n      isSaveButtonDisabled,\n      onInputChange,\n      onSaveButtonClick\n    } = this.props;\n    return (\n      <form action=\"\">\n        <fieldset className=\"fieldset-div\">\n          <legend>Dados da Carta</legend>\n\n          <div className=\"input-container\">\n            <span>Name</span>\n            <input\n              type=\"text\"\n              name=\"cardName\"\n              data-testid=\"name-input\"\n              id=\"name-input\"\n              value={ cardName }\n              onChange={ onInputChange }\n            />\n          </div>\n\n          <div className=\"input-container\">\n            <span>Text Box</span>\n            <textarea\n              name=\"cardDescription\"\n              data-testid=\"description-input\"\n              id=\"description-input\"\n              value={ cardDescription }\n              onChange={ onInputChange }\n            />\n          </div>\n\n          <div className=\"attr-container\">\n            <span>Power</span>\n            <input\n              type=\"number\"\n              name=\"cardAttr1\"\n              data-testid=\"attr1-input\"\n              id=\"attr1-input\"\n              value={ cardAttr1 }\n              onChange={ onInputChange }\n            />\n          </div>\n\n          <div className=\"attr-container\">\n            <span>Toughness</span>\n            <input\n              type=\"number\"\n              name=\"cardAttr2\"\n              data-testid=\"attr2-input\"\n              id=\"attr2-input\"\n              value={ cardAttr2 }\n              onChange={ onInputChange }\n            />\n          </div>\n\n          <div className=\"attr-container\">\n            <span>Mana Cost:</span>\n            <input\n              type=\"number\"\n              name=\"cardAttr3\"\n              data-testid=\"attr3-input\"\n              id=\"attr3-input\"\n              value={ cardAttr3 }\n              onChange={ onInputChange }\n            />\n          </div>\n\n          <div className=\"image-container\">\n            <span>Image URL:</span>\n            <input\n              type=\"text\"\n              src=\"\"\n              alt=\"\"\n              className=\"image-input\"\n              data-testid=\"image-input\"\n              id=\"imageSrc\"\n              name=\"cardImage\"\n              value={ cardImage }\n              onChange={ onInputChange }\n            />\n          </div>\n\n          <div className=\"input-container\">\n            <span>Rarity:</span>\n            <select\n              name=\"cardRare\"\n              className=\"select-list\"\n              data-testid=\"rare-input\"\n              id=\"rarity\"\n              value={ cardRare }\n              onChange={ onInputChange }\n            >\n              <option value=\"common\">Common</option>\n              <option value=\"uncommon\">Uncommon</option>\n              <option value=\"rare\">Rare</option>\n              <option value=\"mythic rare\">Mythic Rare</option>\n            </select>\n          </div>\n\n          {/* { hasTrunfo ? (\n            <div className=\"input-container\">\n              <span>You already has a Mythic Rare card in your deck!</span>\n            </div>\n          ) : (\n            <div>\n              <input\n                type=\"checkbox\"\n                name=\"cardTrunfo\"\n                className=\"checkbox-mythic-rare\"\n                data-testid=\"trunfo-input\"\n                id=\"mythic-rare\"\n                checked={ cardTrunfo }\n                onChange={ onInputChange }\n              />\n              <span>Mythic Rare!</span>\n            </div>\n          )} */}\n\n          <div className=\"saveBtn-container\">\n            <button\n              type=\"submit\"\n              className=\"save-btn\"\n              data-testid=\"save-button\"\n              name=\"save-button\"\n              disabled={ isSaveButtonDisabled }\n              onClick={ onSaveButtonClick }\n            >\n              Salvar\n            </button>\n          </div>\n\n        </fieldset>\n      </form>\n    );\n  }\n}\n\nForm.propTypes = {\n  cardName: PropTypes.string,\n  cardDescription: PropTypes.string,\n  cardAttr1: PropTypes.string,\n  cardAttr2: PropTypes.string,\n  cardAttr3: PropTypes.string,\n  cardImage: PropTypes.string,\n  cardRare: PropTypes.string,\n  cardTrunfo: PropTypes.bool,\n  hasTrunfo: PropTypes.bool,\n  isSaveButtonDisabled: PropTypes.bool,\n  onInputChange: PropTypes.func,\n  onSaveButtonClick: PropTypes.func,\n};\n\nForm.defaultProps = {\n  cardName: '',\n  cardDescription: '',\n  cardAttr1: 0,\n  cardAttr2: 0,\n  cardAttr3: 0,\n  cardImage: '',\n  cardRare: 'normal',\n  cardTrunfo: false,\n  hasTrunfo: false,\n  isSaveButtonDisabled: false,\n  onInputChange: () => {},\n  onSaveButtonClick: () => {},\n};\n\nexport default Form;\n","import React from 'react';\n\nclass CardFront extends React.Component {\n  render() {\n    const { cardName, cardDescription,\n      cardAttr1, cardAttr2, cardAttr3,\n      cardImage, cardRare } = this.props;\n    return (\n      <div className=\"fieldset-card-div\">\n        <div className=\"preview-card-div\">\n\n          <div className=\"name-and-mana-div\">\n            <div className=\"name-div\">\n              <h4\n                data-testid=\"name-card\"\n              >\n                { cardName }\n              </h4>\n            </div>\n\n            <div className=\"mana-div\">\n              <h4\n                data-testid=\"attr3-card\"\n                >\n                { cardAttr3 }\n              </h4>\n            </div>\n          </div>\n\n          <div className=\"img-div\">\n            <img\n              src={ cardImage }\n              data-testid=\"image-card\"\n            />\n          </div>\n\n          <div className=\"rarity-div\">\n            <div className=\"rarity-field\">\n              <h5\n                data-testid=\"rare-card\"\n              >\n                \n                { cardRare }\n              </h5>\n            </div>\n          </div>\n\n          <div className=\"description-div\">\n            <p\n              data-testid=\"description-card\"\n            >\n               \n              { cardDescription }\n            </p>\n          </div>\n\n          <div className=\"power-toughness-div\">\n            <div className=\"power-toughness-div-2\">\n              <div className=\"power-div\">\n                <h4\n                  data-testid=\"attr1-card\"\n                >\n                  \n                  { cardAttr1 }\n                </h4>\n              </div>\n              <div className=\"slash-div\">\n                <h4>/</h4>\n              </div>\n              <div className=\"toughness-div\">\n                <h4\n                  data-testid=\"attr2-card\"\n                >\n                  \n                  { cardAttr2 }\n                </h4>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default CardFront;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport CardFront from './CardFront';\n\nclass Card extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      flipped: false,\n    }\n  }\n\n  render() {\n    return (\n      <div class=\"flip-card\">\n      <div class=\"flip-card-inner\">\n        <div class=\"flip-card-front\">\n          <CardFront {...this.props} />\n        </div>\n        <div class=\"flip-card-back\">\n        </div>\n      </div>\n    </div> \n    );\n  }\n}\n\nCard.propTypes = {\n  ccardName: PropTypes.string,\n  cardDescription: PropTypes.string,\n  cardAttr1: PropTypes.string,\n  cardAttr2: PropTypes.string,\n  cardAttr3: PropTypes.string,\n  cardImage: PropTypes.string,\n  cardRare: PropTypes.string,\n  cardTrunfo: PropTypes.bool,\n};\n\nCard.defaultProps = {\n  cardName: '',\n  cardDescription: '',\n  cardAttr1: 0,\n  cardAttr2: 0,\n  cardAttr3: 0,\n  cardImage: '',\n  cardRare: 'normal',\n  cardTrunfo: false,\n};\n\nexport default Card;\n","import React from 'react';\nimport Form from './components/Form';\nimport Card from './components/Card';\nimport './App.css';\n\nconst initialState = {\n  cardName: '',\n  cardDescription: '',\n  cardAttr1: '0',\n  cardAttr2: '0',\n  cardAttr3: '0',\n  cardImage: '',\n  cardRare: 'common',\n  cardTrunfo: false,\n  isSaveButtonDisabled: true,\n};\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      ...initialState, // Para copiar os valores do objeto initialState usando o spread operator.\n      cards: [],\n      hasTrunfo: false,\n      nameFilter: '',\n      rarityFilter: 'todas',\n      superTrunfoFilter: false,\n      filterDisabled: false,\n    };\n  }\n\n  filterChangeHandler = (event) => {\n    const { name, type, checked } = event.target;\n    const value = type === 'checkbox' ? checked : event.target.value;\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  changeHandler = (event) => {\n    const { name, type } = event.target;\n    let { value } = event.target;\n\n    if (type === 'checkbox') {\n      value = event.target.checked;\n    } else {\n      value = event.target.value;\n    }\n\n    this.setState(\n      {\n        [name]: value,\n      },\n      this.cardValidation,\n    );\n  }\n\n  validateInputs = () => {\n    const { cardName, cardDescription, cardImage, cardRare } = this.state;\n\n    if (\n      cardName === ''\n      || cardDescription === ''\n      || cardImage === ''\n      || cardRare === ''\n    ) {\n      return false; // Se alguma condição ali for verdadeira, vai retornar false\n    }\n\n    return true;\n  }\n\n  validateAttributes = () => {\n    const { cardAttr1, cardAttr2, cardAttr3 } = this.state;\n    const attr1 = Number(cardAttr1);\n    const attr2 = Number(cardAttr2);\n    const attr3 = Number(cardAttr3);\n    const maxSumAllowed = 210;\n    const maxValue = 90;\n    const minValue = 0;\n    const sumAllAttributes = (attr1 + attr2 + attr3) > maxSumAllowed;\n\n    if (\n      sumAllAttributes\n      || attr1 < minValue\n      || attr1 > maxValue\n      || attr2 < minValue\n      || attr2 > maxValue\n      || attr3 < minValue\n      || attr3 > maxValue\n    ) {\n      return false; // Se alguma condição ali for verdadeira, vai retornar false\n    }\n\n    return true;\n  }\n\n  cardValidation = () => {\n    const inputs = this.validateInputs();\n    const attributes = this.validateAttributes();\n    const isAllValid = inputs && attributes; // Se algo estiver vazio, os dois irão retornar false. A negação de false é true, logo o botão vai ficar com o disable ativado. Caso os dois retornem true, significando que não há nada vazio, a negação de true é false, logo o botão vai ficar habilitado.\n\n    this.setState({ isSaveButtonDisabled: !isAllValid });\n  }\n\n  saveButton = (event) => {\n    event.preventDefault();\n    const { cardName, cardDescription, cardAttr1,\n      cardAttr2, cardAttr3, cardImage, cardRare,\n      cardTrunfo, hasTrunfo } = this.state;\n\n    const card = {\n      cardName,\n      cardDescription,\n      cardAttr1,\n      cardAttr2,\n      cardAttr3,\n      cardImage,\n      cardRare,\n      cardTrunfo,\n      hasTrunfo,\n    };\n\n    this.setState((prevState) => ({\n      cards: prevState.cards.concat(card),\n    }), () => {\n      if (cardTrunfo) {\n        this.setState({\n          ...initialState,\n          hasTrunfo: true,\n        });\n      } else {\n        this.setState({\n          ...initialState,\n        });\n      }\n    });\n  }\n\n  removeCard = (cardToRemove, isTrunfo) => {\n    const { cards } = this.state;\n    const updatedCardList = cards.filter(({ cardName }) => cardName !== cardToRemove);\n\n    this.setState((prevState) => ({\n      cards: updatedCardList,\n      hasTrunfo: isTrunfo ? false : prevState.hasTrunfo,\n    }));\n  }\n\n  render() {\n    const { cards, filterDisabled } = this.state;\n    return (\n      <div className=\"main-container\">\n        <h1>Magic: The Gathering</h1>\n        {/* Formulário: */}\n        <div className=\"form-div\">\n          <div className=\"card-div\">\n            <Form\n              { ...this.state }\n              onInputChange={ this.changeHandler }\n              onSaveButtonClick={ this.saveButton }\n            />\n          </div>\n\n          <aside className=\"aside-container\">\n            <div className=\"preview-app-div\">\n              <Card { ...this.state } />\n            </div>\n          </aside>\n        </div>\n        {/* Deck: */}\n        <div className=\"deck-div\">\n          <h3>Your Deck</h3>\n\n          <div className=\"filters-div\">\n            <h5>Search Filters</h5>\n            <div>\n              <input\n                type=\"text\"\n                name=\"nameFilter\"\n                disabled={ filterDisabled }\n                placeholder=\"Card Name\"\n                data-testid=\"name-filter\"\n                onChange={ this.filterChangeHandler }\n              />\n            </div>\n            <div>\n              <select\n                data-testid=\"rare-filter\"\n                name=\"rarityFilter\"\n                selected={true}\n                disabled={ filterDisabled }\n                onChange={ this.filterChangeHandler }\n              >\n              <option value=\"todas\">All</option>\n              <option value=\"common\">Common</option>\n              <option value=\"uncommon\">Uncommon</option>\n              <option value=\"rare\">Rare</option>\n              <option value=\"mythic rare\">Mythic Rare</option>\n              </select>\n            </div>\n          </div>\n\n          <div className=\"deck-cards\">\n            {cards.filter((card) => {\n              const { nameFilter, rarityFilter, superTrunfoFilter } = this.state;\n              if (nameFilter !== '') {\n                return card.cardName.includes(nameFilter);\n              }\n              if (rarityFilter !== 'todas') {\n                return card.cardRare === rarityFilter;\n              }\n              if (superTrunfoFilter) {\n                return card.cardTrunfo === true;\n              }\n              return true;\n            }).map((card) => (\n              <div key={ card.cardName } className=\"decks-card\">\n                <Card { ...card } />\n                <button\n                  type=\"button\"\n                  onClick={ () => this.removeCard(card.cardName, card.cardTrunfo) }\n                  data-testid=\"delete-button\"\n                  className=\"delete-button\"\n                >\n                  Excluir\n                </button>\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}